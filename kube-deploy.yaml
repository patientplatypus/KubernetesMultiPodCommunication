apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: exampleapp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: exampleapp
  template:
    metadata:
      labels:
        app: exampleapp
    spec:
      containers:
      - name: nginx
        image: patientplatypus/kubeplayfrontend
        ports:
        - containerPort: 3000
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: backend
  labels:
    app: exampleapp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: exampleapp
  template:
    metadata:
      labels:
        app: exampleapp
    spec:
      containers:
      - name: nginx
        image: patientplatypus/kubeplaybackend
        ports:
        - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: entrypt
spec:
  type: LoadBalancer
  ports:
  - name: backend
    port: 8080
    targetPort: 5000
  - name: frontend
    port: 81
    targetPort: 3000
  selector:
    app: exampleapp
# ---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: ingress
#   annotations:
#     kubernetes.io/ingress.class: nginx
# spec:
#   rules:
#     - host: www.example.com
#       http:
#         paths:
#           - path: /api
#             backend:
#               serviceName: backend
#               servicePort: 31064
#           - path: /
#             backend:
#               serviceName: frontend
#               servicePort: 31064
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: ingress
#   # namespace: exampledeploy
# spec:
#   type: LoadBalancer
#   selector:
#     app: ingress
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 80
# ---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   annotations:
#     kubernetes.io/ingress.class: nginx
# spec:
#   rules:
#     - host: www.example.com
#       http:
#         paths:
#           - path: /api
#             backend:
#               serviceName: backend
#               servicePort: 80
#           - path: /
#             frontend:
#               serviceName: frontend
#               servicePort: 80
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   annotations:
#     kubernetes.io/ingress.class: nginx
#   name: ingress
# spec:
#   rules:
#     - host: www.example.com
#       http:
#         paths:
#           - backend:
#               serviceName: backend
#               servicePort: 80
#             path: /api
#           - frontend:
#               serviceName: frontend
#               servicePort: 80
#             path: /
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: ingress
#   labels:
#     app: ingress
# spec:      
#   rules:
#   - host: www.kubeplaytime.example
#     http:
#       paths:
#       - path: /
#         backend:
#           serviceName: frontend
#           servicePort: 80
#       - path: /api
#         backend:
#           serviceName: backend
#           servicePort: 80
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: ingress
# spec:
#   type: LoadBalancer
#   selector:
#     app: ingress
#   ports:
#   - name: http
#     port: 80
#     targetPort: http